---
title: "Milestone 3 Blog Post"
author: "Katelyn McClure and Kynan Desouza-Chen"
format:
  html:
    toc: true
    toc-depth: 2
    embed-resources: true
---

Write a short blog post (no more than 1000 words) about your results so far. Create a Milestone3-Blog.qmd file in your results folder within project repository on Github and render to generate an HTML file for this post. In this post, you should:

# Motivate the importance of the topic (166 words)

The Macalester Women's Volleyball team, as with most point-oriented sports teams at Mac, has employees at their matches collecting game statistics. However, much of the time, these game statistics just sit around in a database or are used for a few basic calculations by the coaching staff to evaluate performance. This project aims to use these statistics to create insights into the team's performance and development. This is important for a team because it can help the coaches and players understand their strengths and weaknesses and help them improve their performance by alerting them what aspects of play that could be paid more attention to in practice. 

While sports analytics is a well-established field in professional and D1 sports, it is not as common in the context of small, liberal arts college sports teams, especially women's sports teams. This project aims to bridge that gap by providing a detailed analysis of the Macalester Women's Volleyball that aims to answer data questions from the coaching staff themselves.  


# Lead the reader through the rationale for the narrowing/focusing of the scope via the main 2-3 broad questions

## Q1: modeling w/l based on desired game stats (118 words)

We met with Mac Volleyball head coach Mary Johnston and assistant coach Keelin Severtson in October to discuss the direction that they thought would be most useful for them for us to take with our open-ended project. They expressed interest in understanding their team's performance (Win/Loss) based on specific game statistics. Specifically, they were curious about relationships between hitting percentage ((total kills - total errors) / total attempts), service aces (Mac serves that were not returned by the opposing team), and service errors (Mac serves that did not land in bounds). This led us to the first broad question of our project: "Can we predict the outcome of a game based on hitting percentage, service aces, and service errors?"


# Tie results (plots and modeling output) to the broad questions and explain how all results fit together

## Q1: modeling w/l based on desired game stats (391 words)

In order to predict the outcome of a game based on hitting percentage, service aces, and service errors, we first needed to clean and preprocess the data. We decided to use data from the 2021, 2022, and 2023 seasons to train our model. We chose these years because 2025 seniors were freshmen for the 2021 season, so these years encompass their entire time at Macalester. Additionally, data from years before 2021 would represent a completely different group of players, and Mary Johnston became the head coach of the team during the 2021 season. 

Using this publically available data from the Macalester Athletics website, we were able to train a logistic regression model to predict the outcome of a game based on hitting percentage, service aces, and service errors. 

```{r echo = FALSE, message = FALSE}
library(tidyverse)
library(rvest)

# 2024
per_match_24 <- read_html("https://athletics.macalester.edu/sports/womens-volleyball/stats/2024") %>%
  html_table() %>%
  .[[6]]
clean_per_match_24 <- per_match_24 %>%
  mutate(Opponent = str_extract(Opponent, "[A-Z].*")) %>%
  mutate(Opponent = if_else(Opponent == "Luther", "Luther ", Opponent))

# 2023
per_match_23 <- read_html("https://athletics.macalester.edu/sports/womens-volleyball/stats/2023") %>%
  html_table() %>%
  .[[6]]
clean_per_match_23 <- per_match_23 %>%
  mutate(Opponent = str_extract(Opponent, "[A-Z].*")) %>%
  mutate(Opponent = if_else(Opponent == "Luther", "Luther ", Opponent)) %>%
  mutate(`W/L` = as.factor(`W/L`))

# 2022
per_match_22 <- read_html("https://athletics.macalester.edu/sports/womens-volleyball/stats/2022") %>%
  html_table() %>%
  .[[6]]
clean_per_match_22 <- per_match_22 %>%
  mutate(Opponent = str_extract(Opponent, "[A-Z].*")) %>%
  mutate(Opponent = if_else(Opponent == "Luther", "Luther ", Opponent)) %>%
  mutate(`W/L` = as.factor(`W/L`))

# 2021
per_match_21 <- read_html("https://athletics.macalester.edu/sports/womens-volleyball/stats/2021") %>%
  html_table() %>%
  .[[6]]
clean_per_match_21 <- per_match_21 %>%
  mutate(Opponent = str_extract(Opponent, "[A-Z].*")) %>%
  mutate(Opponent = if_else(Opponent == "Luther", "Luther ", Opponent) )%>%
  mutate(`W/L` = as.factor(`W/L`))

# COMBINED DATA (2021, 2022, 2023)
game_stats_21_23 <- bind_rows(clean_per_match_21, clean_per_match_22, clean_per_match_23)
```

```{r echo = FALSE, message = FALSE, warning = FALSE}
library(tidymodels)
# logistic regression model using past 3 years of volleyball data to predict 2024 data
game_stats_21_23 <- game_stats_21_23 %>%
  mutate(`W/L` = as.factor(`W/L`)) %>% 
  mutate(`W/L` = relevel(`W/L`, ref = "L")) # reference is the 0

logistic_spec <- logistic_reg() %>%
  set_mode("classification") %>% 
  set_engine("glm")

# NOT using SR Rating, we only have that data for 2024
variable_recipe <- recipe(`W/L` ~ PCT + SA + SE, data = game_stats_21_23)

logistic_workflow <- workflow() %>% 
  add_recipe(variable_recipe) %>%
  add_model(logistic_spec)

logistic_model <- logistic_workflow %>% 
  fit(data = game_stats_21_23)
```

```{r}
# 2021-2023 Macalester Women's Volleyball Logistic Model (W/L ~ PCT + SA + SE)
logistic_model %>% 
  tidy()
```

Our model returns the log odds coefficients for our variables. This means that for each unit increase (0.01) in hitting percentage leads to an $e^{0.196} = 1.22$ times increase in the odds of winning a game, which translates to a 55% increase in the probability of winning the game. Similarly, for each additional service ace, the odds of winning the game increase by a factor of $e^{0.335} = 1.4$, or a 58% increase in the probability of winning the game. The p-value for service errors lands it far outside of the threshold of significance, so we can conclude that service errors do not have a significant effect on the outcome of a game on our testing data.

Looking at the in-sample confusion plot gives us an insight as to how accurate the model performs on the training data, the data from 2021-2023. The squares in the upper left and lower right corners of the plot represent cases where the model *correctly* predicted the outcome of the game. 

```{r echo = FALSE, message = FALSE, warning = FALSE}
in_sample_classifications <- logistic_model %>%
  augment(new_data = game_stats_21_23) %>%
  mutate(.pred_class = ifelse(is.na(.pred_class), "W", .pred_class)) %>%
  mutate(.pred_class = if_else(.pred_class == "1", "L", "W")) %>%
  mutate(.pred_class = as.factor(.pred_class)) %>%
  mutate(.pred_class = droplevels(.pred_class)) %>%
  mutate(`W/L` = factor(`W/L`, levels = c("L", "W")))


in_sample_confusion <- in_sample_classifications %>%
  conf_mat(truth = `W/L`, estimate = .pred_class)
```

```{r}
in_sample_confusion %>% 
  autoplot()
```

Our model has an in-sample accuracy of 79.2%, meaning that it correctly predicted the outcome of a game used to train it (2021-2023) 79.2% of the time.

```{r}
summary(in_sample_confusion, event_level = "second") %>%
  filter(.metric == "accuracy")
```

When applying the model to the 2024 season (as of 10/30/2024), the model is 18 / (18 + 9) = 67% accurate in predicting the outcome of a game based on hitting percentage, service aces, and service errors. This model could probably be improved by considering more variables, but then we run the risk of overfitting our model to the training data, which would make it appear more accurate while actually being less accurate on new data.

```{r echo = FALSE, message = FALSE, warning = FALSE}
# Testing on new data (2024 season)
predictions24 <- logistic_model %>% 
  augment(new_data = clean_per_match_24) %>%
  mutate(.pred_class = ifelse(is.na(.pred_class), "W", .pred_class)) %>%
  mutate(.pred_class = if_else(.pred_class == "1", "L", "W")) 

predictions24 <- predictions24 %>%
  mutate(Match = if_else(.pred_class == `W/L`, TRUE, FALSE))
```

```{r}
predictions24 %>%
  group_by(Match) %>%
  summarize(count = n())
```

## Q2: looking at 2025 seniors throughout their duration at Mac (271 words)

The coaches also told us they would be interested in knowing how current seniors have developed as players during their time at Macalester. They had not been keeping detailed data about each individual player for years before 2024, so the data we will be working with to analyze trends for seniors is game data from the Macalester Athletics website. Knowing how seniors change over the course of their time in college could help the coaches understand what they are doing well, while also revealing some areas they could focus on more to try to get the most development possible out of their players. 

```{r anonimity, echo=FALSE}
seniors <- c("Wooten, Gwen", "Preston, Adisa", "Geber, Stephanie", "Norton, Nicole", "Galer, Grace", "Williams, Torrance", "MacInnis, Jill")
```


```{r retrieve-data}
library(janitor)

year_links <- str_c("https://athletics.macalester.edu/sports/womens-volleyball/stats/", c(2021, 2022, 2023, 2024))

year_to_df <- function(link){
  all_tables <- read_html(link) %>%
    html_table()
  
  tables <- c(all_tables[2], all_tables[3])
  cleaner_tables <- map(tables, ~ as.data.frame(.x) %>% row_to_names(1) %>% select(-c(`#`, `Bio Link`)))
  
  return_tables <- cleaner_tables[[1]] %>%
    left_join(cleaner_tables[[2]], by = join_by("Player", "SP")) %>%
    mutate(
      year = str_sub(link, nchar(link) - 3),
      Player = str_extract(Player, ".*")) %>%
    filter(Player %in% seniors)
    
  return(return_tables)
}

full_senior_stats <- map(year_links, year_to_df) %>%
  list_rbind()
```

There are some serious limitations on the analysis that we can do that need to be discussed before the results are explained. Firstly, only half of the seniors have started all 4 years of their college careers. In-game statistics are much easier to analyze for 4 year starters since the sample sizes are relatively consistent, meaning that their statistical changes should be meaningful. However, there are some seniors who have started very little or only started certain years. There is even one who has been described as starting for parts of certain years. This makes it much more complicated to analyze their growth over a 4 year period since there are many factors that could contribute to a player not starting, including performance, injury, or coach decisions. For these reasons, we will focus on the 3 seniors that have started for all 4 years in this analysis, and then extend our focus over the next few weeks.

```{r anonimity-2, echo=FALSE}
starters = c("Geber, Stephanie", "Preston, Adisa", "Williams, Torrance")
```


```{r cleaning}
clean_senior_stats <- full_senior_stats %>%
  filter(Player %in% starters) %>%
  mutate(across(!Player, as.numeric))
```



## Q2: looking at 2025 seniors throughout their duration at Mac

```{r viz}
per_year_lines <- function(yvar){
  clean_senior_stats %>%
    ggplot(aes(x = year, y = {{yvar}}, color = Player)) +
    geom_line(show.legend = FALSE) +
    theme_bw()
}
```

Until we have the ability to examine a larger sample of players, the primary form of analysis we can do is visualization. Let’s look at the hitting percentage over the years for the 3 starters first, since this is a measure of the offensive efficiency of a player.
```{r}
per_year_lines(PCT)
```

What caught my attention is that 2 of the 3 players didn’t have any major improvements in their hitting percentage, though it is important to note that these players already had high offensive production, so any expected improvement would be marginal. The third player though, started out with a negative hitting percentage but steadily improved to have a very high percentage by the end of their time in college. 

The other statistic we will focus on is reception percentage, which is essentially a measure of how good a player is at returning serves. It is important to note that not all players return serves because certain positions aren’t in good spots to return.
```{r}
per_year_lines(`Rec%`)
```

We can disregard the yellow line on this graph since this is one of the players that doesn’t return a large enough amount of serves to do a meaningful analysis on it. But we can see the massive jump in reception percentage in the other 2 players. Since their trends in reception percentage are so similar, it calls into question whether these 2 stats are correlated, so further analysis is needed to determine whether there is a relationship.

We will leave off with future plans. This week was mostly about getting all the data into a somewhat workable format. We did some cursory analysis, but there is plenty more to analysis to do, and plenty of player we haven't even explored at all. Also, our model is calibrated to things we were told were important, but we could explore what else could make the win/loss model better. The main ethical consideration is with the anonymity of the players we are analyzing. We will obviously share results of our stury with the coaches, but we may consider not publishing results online.
